<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="Domination">
    <property environment="env"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
    <path id="Persisted container [com.android.ide.eclipse.adt.LIBRARIES for project [Domination]].libraryclasspath"/>
    <path id="Persisted container [com.android.ide.eclipse.adt.DEPENDENCIES for project [Domination]].libraryclasspath"/>
    <path id="JUnit 4.libraryclasspath">
        <pathelement location="../../../.p2/pool/plugins/org.junit_4.12.0.v201504281640/junit.jar"/>
        <pathelement location="../../../.p2/pool/plugins/org.hamcrest.core_1.3.0.v201303031735.jar"/>
    </path>
    <path id="Persisted container [com.android.ide.eclipse.adt.ANDROID_FRAMEWORK for project [Domination]].libraryclasspath"/>
    <path id="Domination.classpath">
        <pathelement location="bin/classes"/>
        <path refid="Persisted container [com.android.ide.eclipse.adt.LIBRARIES for project [Domination]].libraryclasspath"/>
        <path refid="Persisted container [com.android.ide.eclipse.adt.DEPENDENCIES for project [Domination]].libraryclasspath"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <path refid="Persisted container [com.android.ide.eclipse.adt.ANDROID_FRAMEWORK for project [Domination]].libraryclasspath"/>
        <pathelement location="assets"/>
        <pathelement location="BaseGameUtils"/>
        <pathelement location="game"/>
        <pathelement location="gradle"/>
        <pathelement location="installer"/>
        <pathelement location="lib"/>
        <pathelement location="libs"/>
        <pathelement location="nbproject"/>
        <pathelement location="res"/>
        <pathelement location="res_swing"/>
        <pathelement location="sound"/>
    </path>
    <target name="init">
        <mkdir dir="bin/classes"/>
        <copy includeemptydirs="false" todir="bin/classes">
            <fileset dir="gen">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin/classes">
            <fileset dir="res_android">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin/classes">
            <fileset dir="src">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin/classes">
            <fileset dir="src_android">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin/classes">
            <fileset dir="src_mapstore">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin/classes">
            <fileset dir="src_swing">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin/classes">
            <fileset dir="src_lobbyserver">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin/classes">
            <fileset dir="test">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin/classes"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin/classes" includeantruntime="false" source="${source}" target="${target}">
            <src path="gen"/>
            <src path="res_android"/>
            <src path="src"/>
            <src path="src_mapstore"/>
            <src path="src_android"/>
            <src path="src_swing"/>
            <src path="src_lobbyserver"/>
            <src path="test"/>
            <classpath refid="Domination.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="AllTests (1)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="junit.net.yura.domination.AllTests" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="Domination.classpath"/>
        </junit>
    </target>
    <target name="test">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="junit.net.yura.domination.AllTests" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="Domination.classpath"/>
        </junit>
    </target>
    <target name="Domination">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="junit.net.yura.domination.AllTests" todir="${junit.output.dir}"/>
            <test name="junit.net.yura.domination.engine.RiskUIUtilTest" todir="${junit.output.dir}"/>
            <test name="junit.net.yura.domination.engine.ai.AISimulationTest" todir="${junit.output.dir}"/>
            <test name="junit.net.yura.domination.engine.core.RiskGameTest" todir="${junit.output.dir}"/>
            <test name="junit.net.yura.domination.engine.translation.TranslationBundleTest" todir="${junit.output.dir}"/>
            <test name="junit.net.yura.domination.mapstore.MapRendererTest" todir="${junit.output.dir}"/>
            <test name="junit.net.yura.domination.mapstore.MapUpdateServiceTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="Domination.classpath"/>
        </junit>
    </target>
    <target name="junit.net.yura.domination.mapstore">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="junit.net.yura.domination.AllTests" todir="${junit.output.dir}"/>
            <test name="junit.net.yura.domination.engine.RiskUIUtilTest" todir="${junit.output.dir}"/>
            <test name="junit.net.yura.domination.engine.ai.AISimulationTest" todir="${junit.output.dir}"/>
            <test name="junit.net.yura.domination.engine.core.RiskGameTest" todir="${junit.output.dir}"/>
            <test name="junit.net.yura.domination.engine.translation.TranslationBundleTest" todir="${junit.output.dir}"/>
            <test name="junit.net.yura.domination.mapstore.MapRendererTest" todir="${junit.output.dir}"/>
            <test name="junit.net.yura.domination.mapstore.MapUpdateServiceTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="Domination.classpath"/>
        </junit>
    </target>
    <target name="New_configuration">
        <java classname="" failonerror="true" fork="yes">
            <classpath refid="Domination.classpath"/>
        </java>
    </target>
    <target name="RiskGameTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="junit.net.yura.domination.engine.core.RiskGameTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="Domination.classpath"/>
        </junit>
    </target>
    <target name="RiskUIUtilTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="junit.net.yura.domination.engine.RiskUIUtilTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="Domination.classpath"/>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
